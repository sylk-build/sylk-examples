/// <reference types="node" />
import { CallOptions, ChannelCredentials, Client, ClientOptions, ClientUnaryCall, handleUnaryCall, Metadata, ServiceError, UntypedServiceImplementation } from "@grpc/grpc-js";
import { Empty } from "../../../google/protobuf/empty";
/** Generated by sylk.build, DO NOT EDIT. */
export type UnstabelServiceService = typeof UnstabelServiceService;
export declare const UnstabelServiceService: {
    /** [unstable.v1.UnstabelService.Shaky] - */
    readonly shaky: {
        readonly path: "/sylklabs.unstable.v1.UnstabelService/Shaky";
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestSerialize: (value: {
            [key: string]: any;
        } | undefined) => Buffer;
        readonly requestDeserialize: (value: Buffer) => {
            [key: string]: any;
        };
        readonly responseSerialize: (value: Empty) => Buffer;
        readonly responseDeserialize: (value: Buffer) => Empty;
    };
};
export interface UnstabelServiceServer extends UntypedServiceImplementation {
    /** [unstable.v1.UnstabelService.Shaky] - */
    shaky: handleUnaryCall<{
        [key: string]: any;
    } | undefined, Empty>;
}
export interface UnstabelServiceClient extends Client {
    /** [unstable.v1.UnstabelService.Shaky] - */
    shaky(request: {
        [key: string]: any;
    } | undefined, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    shaky(request: {
        [key: string]: any;
    } | undefined, metadata: Metadata, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
    shaky(request: {
        [key: string]: any;
    } | undefined, metadata: Metadata, options: Partial<CallOptions>, callback: (error: ServiceError | null, response: Empty) => void): ClientUnaryCall;
}
export declare const UnstabelServiceClient: {
    new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): UnstabelServiceClient;
    service: typeof UnstabelServiceService;
};
